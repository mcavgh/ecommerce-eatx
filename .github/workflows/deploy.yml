name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Permite ejecutar manualmente

env:
  REGISTRY: ghcr.io
  GITHUB_USERNAME: mcavgh
  REPO_NAME: ecommerce-eatx
  IMAGE_NAME_BACKEND:  ghcr.io/mcavgh/ecommerce-eatx-backend
  IMAGE_NAME_FRONTEND: ghcr.io/mcavgh/ecommerce-eatx-frontend

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   name: Run Tests
    
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
    
  #   - name: Set up Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: '18'
  #       cache: 'npm'
  #       cache-dependency-path: |
  #         backend/package-lock.json
  #         frontend/package-lock.json
    
  #   - name: Install backend dependencies
  #     run: |
  #       cd backend
  #       npm ci
    
  # #  - name: Install frontend dependencies
  #  #   run: |
  #   #    cd frontend
  #    #   npm ci

  build-and-push:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
  
    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: ${{ steps.meta-backend.outputs.tags }}
        labels: ${{ steps.meta-backend.outputs.labels }}
    
    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: ${{ steps.meta-frontend.outputs.tags }}
        labels: ${{ steps.meta-frontend.outputs.labels }}
        build-args: |
          REACT_APP_API_URL=http://161.35.59.121:3001

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to production server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        script: | #antes se debe clonar
          cd /root/ecommerce-eatx
          git pull origin main
          docker compose -f docker-compose.yml down
          docker compose -f docker-compose.yml pull
          docker compose -f docker-compose.yml up -d
          docker system prune -f